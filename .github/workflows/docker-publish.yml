name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

jobs:
  build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: Checkout GitHub Action
      uses: actions/checkout@main
      
    - name: Build and push image
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . --file src/VacaySoft.Api/Dockerfile -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api:0.0.${{ github.run_number }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api:latest
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api
  
  develop:
    needs: build
    name: Deploy to Development
    environment: 
      name: Develop
      url: https://vacaysoft-api-develop.azurewebsites.net/swagger
    runs-on: ubuntu-latest
    steps:

    - name: Checkout GitHub Action
      uses: actions/checkout@main
      
    - name: Install EF Core tools
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0'
    - run: |
        dotnet tool install --global dotnet-ef
        dotnet tool restore
        dotnet restore
        dotnet ef migrations script -o mssql.sql -i -p src/VacaySoft.Infrastructure/VacaySoft.Infrastructure.csproj -s src/VacaySoft.Api/VacaySoft.Api.csproj
        
    - name: Login via Azure CLI Web
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_MSSQL_CREDENTIAL }}

    - name: Azure SQL Deploy (dacpac, file, folder)
    # You may pin to the exact commit or the version.
    # uses: XLipcak/sql-action@1b2b1ea66beb232831e97be2be8382be8f006840
      uses: Azure/sql-action@v1
      with:
        # Name of the Azure SQL Server name, like Fabrikam.database.windows.net.
        server-name: vacaysoft.database.windows.net
        # The connection string, including authentication information, for the Azure SQL Server database.
        connection-string: ${{ secrets.MSSQL_CONNECTIONSTRING }}
        # Path to SQL script file. *.sql or a folder to deploy
        sql-file: mssql.sql
        
    - name: Login via Azure CLI Web
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: vacaysoft-api
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.PUBLISHING_PROFILE }} # optional
        # Enter an existing Slot other than the Production slot
        slot-name: develop # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        #package: # optional, default is .
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api:latest
        # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional
        # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional
        
    - name: Update Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: vacaysoft-api
        mask-inputs: true
        slot-name: develop  # Optional and needed only if the settings have to be configured on the specific deployment slot
        connection-strings-json: |
          [
            {
              "name": "Default",
              "value": "${{ secrets.MSSQL_CONNECTIONSTRING }}",
              "type": "SQLAzure",
              "slotSetting": true
            }
          ]
        app-settings-json: |
          [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "Development",
              "slotSetting": true 
            },
            {
              "name": "Version",
              "value": "0.0.${{ github.run_number }}",
              "slotSetting": true 
            }
          ]
      id: settings

  staging:
    needs: develop
    name: Deploy to staging
    environment:
      name: Staging
      url: https://vacaysoft-api-staging.azurewebsites.net/swagger
    runs-on: ubuntu-latest
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: vacaysoft-api
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.PUBLISHING_PROFILE }}# optional
        # Enter an existing Slot other than the Production slot
        slot-name: staging # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        #package: # optional, default is .
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api:latest
        # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional
        # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional

    - name: Update Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: vacaysoft-api
        mask-inputs: false
        slot-name: staging  # Optional and needed only if the settings have to be configured on the specific deployment slot
        app-settings-json: |
          [
            {
              "name": "ASPNETCORE_ENVIRONMENT",
              "value": "Development",
              "slotSetting": true 
            },
            {
              "name": "Version",
              "value": "0.0.${{ github.run_number }}",
              "slotSetting": true 
            }
          ]
      id: settings

  production:
    needs: staging
    name: Deploy to production
    environment: Production
    runs-on: ubuntu-latest
    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: vacaysoft-api
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.PUBLISHING_PROFILE }}# optional
        # Enter an existing Slot other than the Production slot
        #slot-name: # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        #package: # optional, default is .
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/vacaysoft-api:latest
        # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional
        # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional

    - name: Update Settings
      uses: azure/appservice-settings@v1
      with:
        app-name: vacaysoft-api
        mask-inputs: false
        #slot-name: # Optional and needed only if the settings have to be configured on the specific deployment slot
        app-settings-json: |
          [
            {
              "name": "Version",
              "value": "0.0.${{ github.run_number }}",
              "slotSetting": true 
            }
          ]
      id: settings

